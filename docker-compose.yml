---
services:
  zookeeper:
    image: quay.io/debezium/zookeeper:3.0
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
  kafka:
    image: quay.io/debezium/kafka:3.0
    ports:
      - "9092:9092"
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
  database:
    image: quay.io/debezium/example-mysql:3.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: debezium
      MYSQL_USER:          mysqluser
      MYSQL_PASSWORD:      mysqlpw 
  debezium:
    image: quay.io/debezium/connect:3.0
    ports:
      - "8083:8083"
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1 
      - CONFIG_STORAGE_TOPIC=my_connect_configs 
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses


# Get connector list 
# curl -H "Accept:application/json" localhost:8083/connectors/
# curl -s -X GET -H "Accept:application/json" localhost:8083/connectors/inventory-connector | jq

# Connect to db
# > docker compose exec -it <container_name> bash
# Enter sql
# > mysql -hlocalhost -P3306 -uroot -pdebezium
# use table inventory
# > use inventory;
# show tables in database inventory
# > show tables;
# show all data in table customers
# > SELECT * FROM customers;
# update one entity
# > UPDATE customers SET first_name='Anne Marie' WHERE id=1004;

# get kafka entities. run it from container 
# > kafka-console-consumer.sh --bootstrap-server kafka:9092 --topic dbserver1.inventory.customers --from-beginning
# Either use this command:
# docker compose exec -it kafka sh -c "./bin/kafka-console-consumer.sh --bootstrap-server kafka:9092 --topic dbserver1.inventory.customers --from-beginning" | jq
